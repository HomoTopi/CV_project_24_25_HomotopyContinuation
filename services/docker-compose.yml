services:
  julia-intersector-hc:
    build:
      context: ./Julia
      dockerfile: Dockerfile.julia
    container_name: julia_rectifier_service
    ports:
      - "8081:8081" # Map host port 8081 to container port 8081
    restart: unless-stopped
    # Add healthcheck
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s # Give Julia time to start and compile

  matlab-intersector:
    build:
      context: ./Matlab/conicintersectormicroserviceDockerImage
      dockerfile: Dockerfile
    container_name: matlab_intersector_service
    ports:
      - "9910:9910"
    restart: unless-stopped
    # Add healthcheck
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9910/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
# Usage examples:
# 
# 1. Build and start the services:
#    docker-compose up -d
#
# 2. Example Julia API call:
#    curl -X POST http://localhost:8081/rectify \
#      -H "Content-Type: application/json" \
#      -d '{"conics": [
#            [1.0, 0.0, 1.0, 0.0, 0.0, -1.0],
#            [1.0, 0.0, 0.0, 0.0, 0.0, -1.0],
#            [0.0, 0.0, 1.0, 0.0, 0.0, -1.0]
#          ]}'
#
# 3. Example Conics Intersection API call:
#    curl -X POST http://localhost:8082/intersect \
#      -H "Content-Type: application/json" \
#      -d '{"conics": [
#            [[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, -1.0]],
#            [[3.0, 0.0, 0.0], [0.0, 0.0, -0.5], [0.0, -0.5, -2.0]]
#          ]}'
#
# 4. Check services health:
#    curl http://localhost:8081/health
#    curl http://localhost:8082/health 